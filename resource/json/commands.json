{
	"cogs": [
		{
			"name": "General",
			"short_help": "Commands that don't really fit into the other categories",
			"help": "Commands that don't really fit into the other categories\n\nRandom and/or fun commands with a variety of uses"
		},
		{
			"name": "Audio",
			"short_help": "For playing audio in a voice channel",
			"help": "For playing audio in a voice channel\n\nFor dota-related audio commands, try `{cmdpfx}help dotabase`"
		},
		{
			"name": "Dotabase",
			"short_help": "For information about Dota 2, and playing hero responses",
			"help": "For information about Dota 2, and playing hero responses\n\nInterfaces with [dotabase](http://github.com/mdiller/dotabase). Check out [dotabase.dillerm.io](http://dotabase.dillerm.io) if you want to see a website that interfaces with dotabase."
		},
		{
			"name": "DotaStats",
			"short_help": "Commands for displaying information about Dota 2 players and matches",
			"help": "Commands for displaying information about Dota 2 players and matches\n\nMost of the data for this is collected through the [OpenDota API](https://docs.opendota.com/)"
		},
		{
			"name": "Pokemon",
			"short_help": "Pokemon related commands",
			"help": "Pokemon related commands\n\nA few commands using the [pokeapi](https://pokeapi.co/) which provides information about pokemon\n\nNote that the above API does not include information about pokemon Sun and Moon, so I can't look up those pokemon for you"
		},
		{
			"name": "Artifact",
			"short_help": "Artifact related commands",
			"help": "Artifact related commands\n\nA few commands providing information about Valve's new game [Artifact](https://playartifact.com)"
		},
		{
			"name": "Admin",
			"short_help": "Commands to help manage mangobyte on your server/guild",
			"help": "Commands to help manage mangobyte on your server/guild\n\nPrimarily used to stop people from ruining stuff, and to configure mangobyte to do different things.\n\nOnly admins or people with the correct role can use these commands. To set a role as the 'Bot Admin' role, try `{cmdpfx}config botadmin`"
		}
	],
	"commands": [
		{
			"name": "abilities",
			"signature": "?abilities <hero>",
			"short_help": "Shows all of the abilities/spells for that hero",
			"help": "Shows all of the abilities/spells for that hero",
			"aliases": [
				"spells"
			],
			"cog": "Dotabase"
		},
		{
			"name": "ability",
			"signature": "?ability <ability>",
			"short_help": "Gets information about a specific hero ability",
			"help": "Gets information about a specific hero ability\n\n**Examples:**\n\u200b`?ability rocket flare`\n\u200b`?ability laser`\n\u200b`?ability sprout`",
			"aliases": [
				"spell"
			],
			"cog": "Dotabase"
		},
		{
			"name": "addemoticon",
			"signature": "?addemoticon <name>",
			"short_help": "Adds a dota emoticon as an animated emoji",
			"help": "Adds a dota emoticon as an animated emoji\n\nThis command will add the dota emoticon as an animated emoji to the server. Because it is an animated emoji, only discord nitro users will be able to use it.\n\nObviously, this command needs the 'Manage Emoji' permission to be able to work.\n\n<a:pup:406270527766790145> <a:stunned:406274986769252353> <a:cocky:406274999951949835>\n\n**Examples:**\n\u200b`?addemoticon pup`\n\u200b`?addemoticon stunned`\n\u200b`?addemoticon naga_song`",
			"aliases": [
				"addemoji"
			],
			"cog": "Dotabase"
		},
		{
			"name": "aghanim",
			"signature": "?aghanim <name>",
			"short_help": "Gets the aghs upgrade for the given hero or ability",
			"help": "Gets the aghs upgrade for the given hero or ability",
			"aliases": [
				"aghs",
				"ags",
				"aghanims",
				"scepter",
				"shard"
			],
			"cog": "Dotabase"
		},
		{
			"name": "ask",
			"signature": "?ask [question]",
			"short_help": "Answers any question you might have",
			"help": "Answers any question you might have",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "blog",
			"signature": "?blog ",
			"short_help": "Pulls the newest blog post for Dota 2",
			"help": "Pulls the newest blog post for Dota 2",
			"aliases": [
				"rss"
			],
			"cog": "Dotabase"
		},
		{
			"name": "botban",
			"signature": "?botban <user>",
			"short_help": "Bans the user from using commands",
			"help": "Bans the user from using commands",
			"aliases": [],
			"cog": "Admin"
		},
		{
			"name": "botstats",
			"signature": "?botstats ",
			"short_help": "Displays some bot statistics",
			"help": "Displays some bot statistics",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "botunban",
			"signature": "?botunban <user>",
			"short_help": "Unbans the user, allowing them to use commands",
			"help": "Unbans the user, allowing them to use commands",
			"aliases": [],
			"cog": "Admin"
		},
		{
			"name": "card",
			"signature": "?card [card_name]",
			"short_help": "Displays info about the artifact card",
			"help": "Displays info about the artifact card\n\nExample:\n\u200b`?artifact Healing Salve`\n\u200b`?artifact Prowler Vanguard`\n\u200b`?artifact keefe`",
			"aliases": [
				"artifact"
			],
			"cog": "Artifact"
		},
		{
			"name": "cat",
			"signature": "?cat ",
			"short_help": "Gets a picture of my cat",
			"help": "Gets a picture of my cat\n\nThese are pictures of my (the developer of mangobyte) cat. Shes a bit over a year old now. Her name is Minnie. Short for Minerva. Also known as \"Kitten\", \"Sneakerdoodle\", or \"Noodle.\" Shes a good kitten. ",
			"aliases": [
				"kitten",
				"cats",
				"kittens",
				"minnie",
				"minerva"
			],
			"cog": "General"
		},
		{
			"name": "changelog",
			"signature": "?changelog ",
			"short_help": "Gets a rough changelog for mangobyte",
			"help": "Gets a rough changelog for mangobyte\n\nNote that this is a very rough changelog built from git commit messages and so will sometimes not relate directly to your perspective.\n\nFor more commit versions or better detailed information, check out the source on [GitHub](https://github.com/mdiller/MangoByte/commits/master)",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "chatwheel",
			"signature": "?chatwheel <text>",
			"short_help": "Plays the given chat wheel sound",
			"help": "Plays the given chat wheel sound\n\nGive the command a number between 1 and 6 to page through all of the available chat options:\n\u200b`?chatwheel 1`\n\u200b`?chatwheel 3`\n\n**Examples:**\n\u200b`?chatwheel Lakad Matataaaag!`\n\u200b`?chatwheel disastah`\n\u200b`?chatwheel Wan Bu Liao La`\n\u200b`?chatwheel \u73a9\u4e0d\u4e86\u5566`\n\u200b`?chatwheel ehto gg`\n\u200b`?chatwheel \u042d\u0442\u043e \u0413\u0413`",
			"aliases": [],
			"cog": "Dotabase"
		},
		{
			"name": "choose",
			"signature": "?choose [options...]",
			"short_help": "Randomly chooses one of the given options",
			"help": "Randomly chooses one of the given options\n\nYou must provide at least one option for the bot to choose, and the options should be separated by spaces\n\n**Example:**\n\u200b`?choose Dota2 Fortnite RocketLeague`\n\u200b`?choose green red blue`",
			"aliases": [
				"pickone"
			],
			"cog": "General"
		},
		{
			"name": "clipinfo",
			"signature": "?clipinfo [clipid]",
			"short_help": "Gets information and a file for the given clip",
			"help": "Gets information and a file for the given clip\n\nNot giving a clipid will print info about the last clip played\n\nclipid is specified like this:\n\u200b`local:shitpickle`\n\u200b`dota:shredder_timb_ally_01`",
			"aliases": [],
			"cog": "Audio"
		},
		{
			"name": "clips",
			"signature": "?clips [tag]",
			"short_help": "Lists the local audio clips available for the play command",
			"help": "Lists the local audio clips available for the play command\n\nCalling this command with no arguments gets you a list of all of the clips\n\nTo get the clips that have a specific tag, do `?clips <tag>`\n\nTo get a list of all of the possible clip tags, try `?clips tags`\n\nYou can also do `?clips new` to get the 10 newest clips",
			"aliases": [
				"playlist"
			],
			"cog": "Audio"
		},
		{
			"name": "config",
			"signature": "?config <name> [value]",
			"short_help": "Configures the bot's settings for this server",
			"help": "Configures the bot's settings for this server\n\nBelow are the different settings that you can tweak to customize mangobyte for this server. You can get more information about a setting by typing `?config <settingname>`, and you can configure a setting by typing `?config <settingname> <value>`\n\n**Settings:**\n\u200b`prefix`\n\u200b`reactions`\n\u200b`ttschannel`\n\u200b`botadmin`\n\u200b`intros`\n\u200b`outros`\n\u200b`ttslang`\n\u200b`usenickname`\n\u200b`simpletts`\n\u200b`announcetts`\n\u200b`dotapatchchannel`\n\u200b`dotablogchannel`\n\u200b`ttschannelwarn`\n\u200b`allowedbots`\n\u200b`allowwebhooks`\n\n**Examples**\n\u200b`?config prefix !`\n\u200b`?config reactions enable`\n\u200b`?config ttschannel #tts`\n\u200b`?config botadmin @BotAdmin`\n\u200b`?config intros disable`\n\u200b`?config outros disable`\n\u200b`?config ttslang Russian`\n\u200b`?config usenickname enable`\n\u200b`?config simpletts enable`\n\u200b`?config announcetts enable`\n\u200b`?config dotapatchchannel #dota`\n\u200b`?config dotablogchannel #dota`\n\u200b`?config ttschannelwarn disable`\n\u200b`?config allowedbots add @Bot123`\n\u200b`?config allowwebhooks enable`",
			"aliases": [],
			"cog": "Admin"
		},
		{
			"name": "courage",
			"signature": "?courage [hero]",
			"short_help": "Generates a challenge build",
			"help": "Generates a challenge build\n\nCreates a challenge build with a random (or given) hero and a random set of items\n\n**Examples:**\n\u200b`?courage`\n\u200b`?courage shadow fiend`",
			"aliases": [],
			"cog": "Dotabase"
		},
		{
			"name": "deck",
			"signature": "?deck <deck_string>",
			"short_help": "Displays the card list for the given deck",
			"help": "Displays the card list for the given deck\n\nExample:\n\u200b`?deck ADCJWkTZX05uwGDCRV4XQGy3QGLmqUBg4GQJgGLGgO7AaABR3JlZW4vQmxhY2sgRXhhbXBsZQ__`",
			"aliases": [],
			"cog": "Artifact"
		},
		{
			"name": "disablecommand",
			"signature": "?disablecommand <command>",
			"short_help": "Disabled the specified command or command category",
			"help": "Disabled the specified command or command category\n\n**Examples:**\n\u200b`?disablecommand wiki`\n\u200b`?disablecommand Audio`",
			"aliases": [],
			"cog": "Admin"
		},
		{
			"name": "docs",
			"signature": "?docs [topic]",
			"short_help": "Shows the documentation for the given topic",
			"help": "Shows the documentation for the given topic\n\nIf no parameters are given, then this shows the available documentation\n\n**Example:**\n\u200b`?docs`\n\u200b`?docs Match Filter`\n\u200b`?docs matchfilter`",
			"aliases": [
				"documentation"
			],
			"cog": "General"
		},
		{
			"name": "dog",
			"signature": "?dog ",
			"short_help": "Gets a picture of one of my dogs",
			"help": "Gets a picture of one of my dogs\n\nThese are pictures of my (the developer of mangobyte) dogs. Thier names are Fizzgig and Comet. One is floof. Other is big doggo. Floof older. Both good boys. ",
			"aliases": [
				"dogs",
				"doggos",
				"doggo",
				"comet",
				"fizzgig"
			],
			"cog": "General"
		},
		{
			"name": "donate",
			"signature": "?donate ",
			"short_help": "Posts the donation information",
			"help": "Posts the donation information",
			"aliases": [
				"tipjar",
				"donation"
			],
			"cog": "General"
		},
		{
			"name": "dota",
			"signature": "?dota [keyphrase]",
			"short_help": "Plays a dota response",
			"help": "Plays a dota response\n\nFirst tries to match the keyphrase with the name of a response\n\nIf there is no response matching the input string, searches for any response that has the input string as part of its text\n\nTo specify a specific hero to search for responses for, use ';' before the hero's name like this:\n\u200b`?dota ;rubick`\n\nTo specify a specific criteria to search for responses for, use ';' before the criteria name like this:\n\u200b`?dota ;rubick ;defeat`\nThere are some aliases for heroes, so the following will work:\n\u200b`?dota sf`\n\u200b`?dota furion`\n\u200b`?dota shredder`\n\nIf failing all of the above, the command will also try to find unlabeled heroes and critera. try:\n\u200b`?dota juggernaut bottling`\nA few critera you can use are: kill, bottling, cooldown, acknowledge, immortality, nomana, and select\n\nTo search for a response without asking mangobyte, try using the [Response Searcher](http://dotabase.dillerm.io/responses/)\nProTip: If you click the discord button next to the response in the above web app, it will copy to your clipboard in the format needed to play using the bot.",
			"aliases": [
				"dotar"
			],
			"cog": "Dotabase"
		},
		{
			"name": "dotagif",
			"signature": "?dotagif <match_id> <start> <end> [ms_per_second=100]",
			"short_help": "Creates a gif of a specific part of a dota match",
			"help": "Creates a gif of a specific part of a dota match\n\nThe part of the match that you specify must be less than 10 minutes long\n\n\u200b`ms_per_second` is how many miliseconds between frames of the gif (each frame is 1 dota second)\n\n**Example:**\n\u200b`?dotagif 3370877768 28:37 30:30`",
			"aliases": [
				"dota_gif"
			],
			"cog": "DotaStats"
		},
		{
			"name": "echo",
			"signature": "?echo <message>",
			"short_help": "Echo...",
			"help": "Echo...\n\nI would hurl words into this darkness and wait for an echo, and if an echo sounded, no matter how faintly, I would send other words to tell, to march, to fight, to create a sense of the hunger for life that gnaws in us all",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "emoticon",
			"signature": "?emoticon <name>",
			"short_help": "Gets the gif of a dota emoticon",
			"help": "Gets the gif of a dota emoticon\n\n<a:pup:406270527766790145> <a:stunned:406274986769252353> <a:cocky:406274999951949835>\n\n**Examples:**\n\u200b`?emoticon pup`\n\u200b`?emoticon stunned`\n\u200b`?emoticon naga_song`",
			"aliases": [
				"emoji"
			],
			"cog": "Dotabase"
		},
		{
			"name": "enablecommand",
			"signature": "?enablecommand <command>",
			"short_help": "Re-enables the specified command or command category",
			"help": "Re-enables the specified command or command category\n\nOnly works on commands that have already been disabled by the `?disablecommand` command\n\n**Examples:**\n\u200b`?enablecommand wiki`\n\u200b`?enablecommand Audio`",
			"aliases": [],
			"cog": "Admin"
		},
		{
			"name": "firstmatch",
			"signature": "?firstmatch [matchfilter]",
			"short_help": "Gets info about the player's first dota game",
			"help": "Gets info about the player's first dota game\n\nTo see how to filter for specific matches, try `?docs matchfilter`",
			"aliases": [
				"firstgame",
				"fm"
			],
			"cog": "DotaStats"
		},
		{
			"name": "fuseheroes",
			"signature": "?fuseheroes [heroes]",
			"short_help": "See what would happen if you fused two heroes together",
			"help": "See what would happen if you fused two heroes together\n\nIf no heroes are given, two will be chosen at random\n\n**Example:**\n\u200b`?fuseheroes axe chen`",
			"aliases": [
				"fuse",
				"fuze",
				"fuzeheroes"
			],
			"cog": "Dotabase"
		},
		{
			"name": "hello",
			"signature": "?hello ",
			"short_help": "Says hello",
			"help": "Says hello\n\nWHAT MORE DO YOU NEED TO KNOW!?!?!? IS 'Says hello' REALLY NOT CLEAR ENOUGH FOR YOU!?!!11?!!?11!!?!??",
			"aliases": [
				"hi"
			],
			"cog": "Dotabase"
		},
		{
			"name": "help",
			"signature": "?help [command]",
			"short_help": "Shows this message",
			"help": "Shows this message",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "hero",
			"signature": "?hero <hero>",
			"short_help": "Gets information about a specific hero",
			"help": "Gets information about a specific hero\n\nYou can give this command almost any variant of the hero's name, or the hero's id\n\n**Examples:**\n\u200b`?hero sf`\n\u200b`?hero inker`\n\u200b`?hero furi`",
			"aliases": [],
			"cog": "Dotabase"
		},
		{
			"name": "herotable",
			"signature": "?herotable <table_args>",
			"short_help": "Displays a sorted table of heroes and their stats",
			"help": "Displays a sorted table of heroes and their stats\n\nDisplays a table with computed hero stats showing which heroes have the highest values for the specified stat. To see the list of possible stats, try the `?leveledstats` command\n\n**Examples:**\n\u200b`?herotable dps`\n\u200b`?herotable health lvl 30`\n\u200b`?herotable attack speed level 21 descending`",
			"aliases": [
				"statstable",
				"stattable",
				"heroestable",
				"leveledstatstable",
				"besthero",
				"bestheroes"
			],
			"cog": "Dotabase"
		},
		{
			"name": "info",
			"signature": "?info ",
			"short_help": "Prints info about mangobyte",
			"help": "Prints info about mangobyte",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "insult",
			"signature": "?insult ",
			"short_help": "Gets a nice insult for ya",
			"help": "Gets a nice insult for ya\n\nMention someone in discord and I'll insult them instead of you\n\n**Example:**\n\u200b`?insult`\n\u200b`?insult @InnocentMan`",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "inthebag",
			"signature": "?inthebag [hero]",
			"short_help": "Proclaims that 'IT' (whatever it is) is in the bag",
			"help": "Proclaims that 'IT' (whatever it is) is in the bag",
			"aliases": [],
			"cog": "Dotabase"
		},
		{
			"name": "invite",
			"signature": "?invite ",
			"short_help": "Prints the invite link",
			"help": "Prints the invite link",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "item",
			"signature": "?item <item>",
			"short_help": "Gets information about a specific item",
			"help": "Gets information about a specific item\n\n**Examples:**\n\u200b`?item shadow blade`\n\u200b`?item tango`",
			"aliases": [],
			"cog": "Dotabase"
		},
		{
			"name": "laning",
			"signature": "?laning [match_id]",
			"short_help": "Creates gif of the laning stage with a caption",
			"help": "Creates gif of the laning stage with a caption\n\nIf no match id is given and the user has a steam account connected, uses the player's most recently played match",
			"aliases": [
				"lanes"
			],
			"cog": "DotaStats"
		},
		{
			"name": "lasagna",
			"signature": "?lasagna ",
			"short_help": "A baked Italian dish",
			"help": "A baked Italian dish\n\nContains wide strips of pasta cooked and layered with meat or vegetables, cheese, and tomato sauce.",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "lastmatch",
			"signature": "?lastmatch [matchfilter]",
			"short_help": "Gets info about the player's last dota game",
			"help": "Gets info about the player's last dota game\n\nTo see how to filter for specific matches, try `?docs matchfilter`",
			"aliases": [
				"lastgame",
				"lm"
			],
			"cog": "DotaStats"
		},
		{
			"name": "lastmatchstory",
			"signature": "?lastmatchstory [player]",
			"short_help": "Tells the story of the player's last match",
			"help": "Tells the story of the player's last match\n\nInput must be either a discord user, a steam32 id, or a steam64 id",
			"aliases": [
				"lastgamestory",
				"lmstory"
			],
			"cog": "DotaStats"
		},
		{
			"name": "later",
			"signature": "?later ",
			"short_help": "Tells you how much later it is",
			"help": "Tells you how much later it is\n\nTheres 19 different ones",
			"aliases": [],
			"cog": "Audio"
		},
		{
			"name": "leveledstats",
			"signature": "?leveledstats <hero>",
			"short_help": "Gets the stats for a hero at the specified level",
			"help": "Gets the stats for a hero at the specified level\n\nIf no level is specified, get the stats for the hero at level 1\n\n**Examples:**\n\u200b`?leveledstats tinker`\n\u200b`?leveledstats shaker lvl 2`\n\u200b`?leveledstats level 28 shaman`",
			"aliases": [
				"startingstats",
				"tradingstats",
				"lvlstats",
				"lvledstats"
			],
			"cog": "Dotabase"
		},
		{
			"name": "lol",
			"signature": "?lol [hero]",
			"short_help": "WOW I WONDER WAT THIS DOES",
			"help": "WOW I WONDER WAT THIS DOES\n\nLaughs using dota. Thats what it does.",
			"aliases": [
				"laugh",
				"haha",
				"lerl"
			],
			"cog": "Dotabase"
		},
		{
			"name": "lore",
			"signature": "?lore [name]",
			"short_help": "Gets the lore of a hero, ability, or item",
			"help": "Gets the lore of a hero, ability, or item\n\nReturns a random piece of lore if no name is specified\n\n**Examples:**\n\u200b`?lore bristleback`\n\u200b`?lore shadow blade`\n\u200b`?lore venomous gale`",
			"aliases": [],
			"cog": "Dotabase"
		},
		{
			"name": "match",
			"signature": "?match <match_id>",
			"short_help": "Gets a summary of the dota match with the given id",
			"help": "Gets a summary of the dota match with the given id",
			"aliases": [
				"matchdetails"
			],
			"cog": "DotaStats"
		},
		{
			"name": "matches",
			"signature": "?matches [matchfilter]",
			"short_help": "Gets a list of your matches",
			"help": "Gets a list of your matches\n\nThe date/time is localized based off of the server that the game was played on, which means it may not match your timezone.\n\nTo see how to filter for specific matches, try `?docs matchfilter`\n\nNote that you can have this show up to 100 matches, but will by default only show 10, unless a timespan is given\n\n**Example:**\n\u200b`?matches @PlayerPerson mid witch doctor ranked`\n\u200b`?matches natures prophet`\n\u200b`?matches @PlayerPerson riki`",
			"aliases": [
				"recentmatches",
				"recent"
			],
			"cog": "DotaStats"
		},
		{
			"name": "matchgraph",
			"signature": "?matchgraph [options]",
			"short_help": "Creates a graph for a dota match",
			"help": "Creates a graph for a dota match\n\nGive this match a match_id or it will try to use your last played game\n\ndifferent types of graphs:\nteamdiff: creates a graph of the networth/xp differences between the teams\nplayergold: creates a graph of the networths of the players throughout the match\n(ill probably add more in the futre but thats it for now)",
			"aliases": [
				"graph",
				"dotagraph"
			],
			"cog": "DotaStats"
		},
		{
			"name": "matchids",
			"signature": "?matchids [matchfilter]",
			"short_help": "Gets a list of matchids that match the given filter",
			"help": "Gets a list of matchids that match the given filter\n\nTo see how to filter for specific matches, try `?docs matchfilter`\n\n**Example:**\n\u200b`?matchids @PlayerPerson mid witch doctor ranked`\n\u200b`?matchids natures prophet`\n\u200b`?matchids @PlayerPerson riki`",
			"aliases": [],
			"cog": "DotaStats"
		},
		{
			"name": "matchstory",
			"signature": "?matchstory <match_id> [perspective]",
			"short_help": "Tells the story of the match",
			"help": "Tells the story of the match\n\nThe story is based on the given perspective, or the player's perspective if they were in the match.",
			"aliases": [],
			"cog": "DotaStats"
		},
		{
			"name": "neutralitems",
			"signature": "?neutralitems [tier]",
			"short_help": "Displays all of the neutral items",
			"help": "Displays all of the neutral items\n\nIf a tier is specified, display the items in that tier, along with their names\n\n\u200b`?neutralitems`\n\u200b`?neutralitems tier 5`\n\u200b`?neutralitems 3`",
			"aliases": [
				"neutrals",
				"neutraltier"
			],
			"cog": "Dotabase"
		},
		{
			"name": "no",
			"signature": "?no [hero]",
			"short_help": "Nopes.",
			"help": "Nopes.",
			"aliases": [
				"nope"
			],
			"cog": "Dotabase"
		},
		{
			"name": "opendota",
			"signature": "?opendota <query>",
			"short_help": "Queries the opendota api",
			"help": "Queries the opendota api\n\nYou can use this to get a json file with details about players or matches etc.\nExamples:\n\u200b`?opendota /players/{steamid}`\n\u200b`?opendota /matches/{match_id}`\n\nNote that this is just a little tool showcasing how you can use the api. You can also put urls like these in your browser to get the same results, which I'd recommend if you're doing this a lot.\n\nFor more options and a better explanation, check out their [documentation](https://docs.opendota.com)",
			"aliases": [],
			"cog": "DotaStats"
		},
		{
			"name": "parse",
			"signature": "?parse [match_id]",
			"short_help": "Requests that OpenDota parses a match",
			"help": "Requests that OpenDota parses a match\n\nThe input should be the match_id of the match\n\nNote that matches from more than a couple days ago may not be able to be parsed because replay files are not saved that long\n\nNot giving a matchid will make mangobyte attempt to use your last played match",
			"aliases": [
				"analyze",
				"studymatch"
			],
			"cog": "DotaStats"
		},
		{
			"name": "ping",
			"signature": "?ping [count=1]",
			"short_help": "Pongs a number of times(within reason)",
			"help": "Pongs a number of times(within reason)\n\nPongs... a number of times.... within reason. *glares at blanedale*",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "play",
			"signature": "?play <clip>",
			"short_help": "Plays an audio clip",
			"help": "Plays an audio clip\n\nExample:\n\u200b`?play hello`\n\nFor a complete list of the available clips, try `?playlist`\n\nThis can also play other clip types via their ClipID\nExample:\n\u200b`?play tts:hello there`",
			"aliases": [],
			"cog": "Audio"
		},
		{
			"name": "playerstats",
			"signature": "?playerstats [matchfilter]",
			"short_help": "Gets player match statistics",
			"help": "Gets player match statistics\n\nBy default this will target all the matches a player has played.\n\n**Note:** If you're wondering why some data is now missing, check out `?twenty`. I've revamped this command to work for all matches, and `?twenty` is the old version of what this command used to be.\n\nTo see how to filter for specific matches, try `?docs matchfilter`",
			"aliases": [
				"pstats",
				"herostats"
			],
			"cog": "DotaStats"
		},
		{
			"name": "playurl",
			"signature": "?playurl <mp3url>",
			"short_help": "Plays an mp3 file at a url",
			"help": "Plays an mp3 file at a url\n\nMake sure to use http, not https",
			"aliases": [],
			"cog": "Audio"
		},
		{
			"name": "pokecry",
			"signature": "?pokecry <pokemon>",
			"short_help": "Plays the pokemon's sound effect",
			"help": "Plays the pokemon's sound effect\n\nAudio files for these pokemon cries were gotten from [Veekun](https://veekun.com/dex/downloads). Veekun does not have the cries for Generation VII yet, so I won't be able to play those.\n\nMost pokemon have a new cry and an old cry. To get the old cry instead of the new one, add 'old' to the end of your command (see example below.)\n\n**Example:**\n\u200b`?pokecry pikachu`\n\u200b`?pokecry bulbasaur old`",
			"aliases": [
				"cry"
			],
			"cog": "Pokemon"
		},
		{
			"name": "pokedex",
			"signature": "?pokedex <pokemon>",
			"short_help": "Looks up information about the indicated pokemon",
			"help": "Looks up information about the indicated pokemon\n\nPokemon should be specified using either their name or id number\n\nClicking on the pokemon's name will bring you to their wiki page\n\nExample:\n\u200b`?pokedex charizard`",
			"aliases": [
				"pokemon"
			],
			"cog": "Pokemon"
		},
		{
			"name": "profile",
			"signature": "?profile [player]",
			"short_help": "Displays information about the player's dota profile",
			"help": "Displays information about the player's dota profile\n\nThe argument for this command can be either a steam32 id, a steam64 id, or an @mention of a discord user who has a steamid set",
			"aliases": [
				"whois"
			],
			"cog": "DotaStats"
		},
		{
			"name": "random_number",
			"signature": "?random_number <maximum> [minimum=0]",
			"short_help": "Gets a random number between the minimum and maximum",
			"help": "Gets a random number between the minimum and maximum\n\nThe min and max integer bounds are **inclusive**\n\nThe command will be able to figure out which number is the minimum and which is the maximum if they are put in backwards. If one number is entered, it is assumed to be the maximum, and the default minimum is 0\n\n**Example:**\n\u200b`?random 5`\n\u200b`?random 1 10`",
			"aliases": [
				"random"
			],
			"cog": "General"
		},
		{
			"name": "recipe",
			"signature": "?recipe <item>",
			"short_help": "Shows the recipes involving this item",
			"help": "Shows the recipes involving this item",
			"aliases": [
				"recipes",
				"craft",
				"crafting"
			],
			"cog": "Dotabase"
		},
		{
			"name": "reddit",
			"signature": "?reddit <url_or_id>",
			"short_help": "Displays a formatted reddit post",
			"help": "Displays a formatted reddit post\n\nNote that this will only get nsfw posts if you call this in an nsfw channel",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "replay",
			"signature": "?replay ",
			"short_help": "Replays the last played clip",
			"help": "Replays the last played clip\n                ",
			"aliases": [],
			"cog": "Audio"
		},
		{
			"name": "restget",
			"signature": "?restget <url>",
			"short_help": "Gets a json response from a rest api and returns it",
			"help": "Gets a json response from a rest api and returns it",
			"aliases": [
				"restapi"
			],
			"cog": "General"
		},
		{
			"name": "resummon",
			"signature": "?resummon ",
			"short_help": "Re-summons the bot to the voice channel",
			"help": "Re-summons the bot to the voice channel\n\nThis command is useful if you are having issues with mangobyte not being responsive",
			"aliases": [],
			"cog": "Admin"
		},
		{
			"name": "rolesgraph",
			"signature": "?rolesgraph [player]",
			"short_help": "Gets a graph displaying the player's hero roles",
			"help": "Gets a graph displaying the player's hero roles\n\nThe graph is based on the player's last 30 games",
			"aliases": [],
			"cog": "DotaStats"
		},
		{
			"name": "scramble",
			"signature": "?scramble <message>",
			"short_help": "Scrambles the insides of words",
			"help": "Scrambles the insides of words",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "shiny",
			"signature": "?shiny <pokemon>",
			"short_help": "Gets the shiny version of this pokemon",
			"help": "Gets the shiny version of this pokemon\n\npokemon should be specified using either their name or id number\n\nExample:\n\u200b`?shiny charizard`",
			"aliases": [],
			"cog": "Pokemon"
		},
		{
			"name": "showerthought",
			"signature": "?showerthought ",
			"short_help": "Gets a top post from r/ShowerThoughts",
			"help": "Gets a top post from r/ShowerThoughts\n\nGets a random post from the [r/ShowerThoughts](https://www.reddit.com/r/Showerthoughts/top/?sort=top&t=all) subreddit. Looks through the list of the all time top posts for the subreddit",
			"aliases": [
				"quote",
				"showerthoughts",
				"thought"
			],
			"cog": "General"
		},
		{
			"name": "skillbuild",
			"signature": "?skillbuild <match_id>",
			"short_help": "Gets the ability upgrades for a match",
			"help": "Gets the ability upgrades for a match\n\nShows all the ability upgrade orders for all heroes in the match",
			"aliases": [
				"abilitybuild",
				"skillbuilds",
				"matchbuilds"
			],
			"cog": "DotaStats"
		},
		{
			"name": "smarttts",
			"signature": "?smarttts <message>",
			"short_help": "Automatically find the best fit for the tts given",
			"help": "Automatically find the best fit for the tts given\n\nFirst checks local clips (like `?play`), then checks to see if it is an audio url, then checks if it's a dota chatwheel message, then checks if there is an exact match for a dota response clip, and if none of the above is found, does a simple tts clip",
			"aliases": [
				"stts"
			],
			"cog": "Audio"
		},
		{
			"name": "stop",
			"signature": "?stop ",
			"short_help": "Stops the currently playing audio",
			"help": "Stops the currently playing audio\n\nAlso empties the clip queue",
			"aliases": [],
			"cog": "Audio"
		},
		{
			"name": "summon",
			"signature": "?summon [channel]",
			"short_help": "Summons the bot to the voice channel",
			"help": "Summons the bot to the voice channel\n\nYou can specify the specific voice channel that you would like to connect to. If no channel is specified, it will connect to whatever channel you are currently in.\n**Examples:**\n\u200b`?summon`\n\u200b`?summon General`",
			"aliases": [],
			"cog": "Admin"
		},
		{
			"name": "talents",
			"signature": "?talents <hero>",
			"short_help": "Gets the talents of a specific hero",
			"help": "Gets the talents of a specific hero\n\nYou can give this command almost any variant of the hero's name, or the hero's id, in the same format as `?hero`\n\n**Examples:**\n\u200b`?talents shadow fiend`",
			"aliases": [],
			"cog": "Dotabase"
		},
		{
			"name": "thanks",
			"signature": "?thanks [hero]",
			"short_help": "Gives thanks",
			"help": "Gives thanks\n\nThanks are given by a random dota hero in their own special way",
			"aliases": [
				"ty"
			],
			"cog": "Dotabase"
		},
		{
			"name": "tts",
			"signature": "?tts <message>",
			"short_help": "Like echo but for people who can't read",
			"help": "Like echo but for people who can't read\n\nTalks in whatever voice channel mangobyte is currently in\n\nExample:\n\u200b`?tts Hello I'm a bot`",
			"aliases": [],
			"cog": "Audio"
		},
		{
			"name": "ttsclip",
			"signature": "?ttsclip <clip>",
			"short_help": "Tries to text-to-speech the given clip",
			"help": "Tries to text-to-speech the given clip\n\nOnly works on clips that have text specified\n\nExample:\n\u200b`?ttsclip yodel`",
			"aliases": [],
			"cog": "Audio"
		},
		{
			"name": "twenty",
			"signature": "?twenty [matchfilter]",
			"short_help": "Gets stats from the player's last 20 parsed games",
			"help": "Gets stats from the player's last 20 parsed games\n\nNote that this only cares about **parsed** games, and unparsed games will be ignored. If the player has less than 20 parsed matches, we'll use all the parsed matches available\n\nTo see how to filter for specific matches, try `?docs matchfilter`",
			"aliases": [
				"chatstats"
			],
			"cog": "DotaStats"
		},
		{
			"name": "unsummon",
			"signature": "?unsummon ",
			"short_help": "Removes the bot from the voice channel",
			"help": "Removes the bot from the voice channel",
			"aliases": [],
			"cog": "Admin"
		},
		{
			"name": "updateartifact",
			"signature": "?updateartifact ",
			"short_help": "Updates all the artifact card data",
			"help": "Updates all the artifact card data",
			"aliases": [],
			"cog": "Artifact"
		},
		{
			"name": "userconfig",
			"signature": "?userconfig <name> [value]",
			"short_help": "Configures the bot's user-specific settings",
			"help": "Configures the bot's user-specific settings\n\nBelow are the different user-specific settings that you can tweak to customize mangobyte. You can get more information about a setting by typing `?userconfig <settingname>`, and you can configure a setting by typing `?userconfig <settingname> <value>`\n\n**Settings:**\n\u200b`steam`\n\u200b`intro`\n\u200b`outro`\n\u200b`introtts`\n\u200b`outrotts`\n\u200b`dmdotapatch`\n\u200b`dmdotablog`\n\n**Examples**\n\u200b`?userconfig steam 70388657`\n\u200b`?userconfig intro local:math`\n\u200b`?userconfig outro dota:troll_warlord_troll_lose_03`\n\u200b`?userconfig introtts it's the magnificent`\n\u200b`?userconfig outrotts dun gone left`\n\u200b`?userconfig dmdotapatch enable`\n\u200b`?userconfig dmdotablog enable`",
			"aliases": [],
			"cog": "General"
		},
		{
			"name": "whoishere",
			"signature": "?whoishere [mentions_or_rank]",
			"short_help": "Shows what discord users are which steam users",
			"help": "Shows what discord users are which steam users\n\nThis command will take the users that are currently in the channel mangobyte is in, and create an embed that shows who they are in steam. If you are in a voice channel, it will use the channel that you are in\n\nYou can also mention the users you want to show and it will show those ones too\n\nIf you use the word `rank` somewhere in the command, it will also show the ranks of the players",
			"aliases": [
				"profiles"
			],
			"cog": "DotaStats"
		},
		{
			"name": "wiki",
			"signature": "?wiki <thing>",
			"short_help": "Looks up a thing on wikipedia",
			"help": "Looks up a thing on wikipedia\n\nUses my own implementation of the [Wikipedia API](https://www.mediawiki.org/wiki/API:Tutorial)\n\nYou can also try `?wiki random` to get a random wiki page\n\nNote that I've had to remove the images from these (unless you're in a NSFW channel) because I have no way of checking if it is an NSFW image, and posting an NSFW image in non-NSFW channels would be against discord's ToS. Sorry about that!\n\n**Example:**\n\u200b`?wiki potato`",
			"aliases": [
				"define",
				"lookup",
				"wikipedia",
				"whatis"
			],
			"cog": "General"
		},
		{
			"name": "yes",
			"signature": "?yes [hero]",
			"short_help": "Oooooh ya.",
			"help": "Oooooh ya.",
			"aliases": [],
			"cog": "Dotabase"
		}
	]
}